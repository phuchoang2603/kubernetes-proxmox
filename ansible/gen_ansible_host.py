#!/usr/bin/env python3

import json
import argparse


def parse_args():
    parser = argparse.ArgumentParser(
        description="Generate Ansible INI inventory from k8s_nodes.json (supports servers/agents format)"
    )
    parser.add_argument("-j", "--json", required=True, help="Path to k8s_nodes.json")
    parser.add_argument(
        "-o", "--output", required=True, help="Path to output hosts.ini"
    )
    return parser.parse_args()


def load_nodes(json_file):
    with open(json_file) as f:
        return json.load(f)


def generate_inventory(nodes):
    servers = []
    agents = []

    for name, info in nodes.items():
        ip = info["address"].split("/")[0]  # remove /24 if present
        if info["role"] == "server":
            servers.append(f"{name} ansible_host={ip}")
        elif info["role"] == "agent":
            agents.append(f"{name} ansible_host={ip}")

    # Generate INI style
    inventory = []
    inventory.append("# Automatically generated by script")
    inventory.append("[servers]")
    inventory.extend(servers)
    inventory.append("")

    inventory.append("[agents]")
    inventory.extend(agents)
    inventory.append("")

    inventory.append("[rke2:children]")
    inventory.append("servers")
    inventory.append("agents")

    return "\n".join(inventory)


def main():
    args = parse_args()
    nodes = load_nodes(args.json)
    inventory_content = generate_inventory(nodes)

    with open(args.output, "w") as f:
        f.write(inventory_content + "\n")

    print(f"âœ… Inventory generated at {args.output}")


if __name__ == "__main__":
    main()
